"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupCheqdExtensions = exports.applyMixins = exports.instantiateCheqdSDKModuleRegistryTypes = exports.instantiateCheqdSDKModule = exports.AbstractCheqdSDKModule = void 0;
const did_1 = require("./did");
class AbstractCheqdSDKModule {
    constructor(signer) {
        this.methods = {};
        this._protectedMethods = ['constructor', 'getRegistryTypes'];
        if (!signer) {
            throw new Error("signer is required");
        }
        this._signer = signer;
    }
}
exports.AbstractCheqdSDKModule = AbstractCheqdSDKModule;
AbstractCheqdSDKModule.registryTypes = [];
function instantiateCheqdSDKModule(module, ...args) {
    return new module(...args);
}
exports.instantiateCheqdSDKModule = instantiateCheqdSDKModule;
function instantiateCheqdSDKModuleRegistryTypes(module) {
    var _a;
    return (_a = module.registryTypes) !== null && _a !== void 0 ? _a : [];
}
exports.instantiateCheqdSDKModuleRegistryTypes = instantiateCheqdSDKModuleRegistryTypes;
function applyMixins(derivedCtor, constructors) {
    let methods = {};
    constructors.forEach((baseCtor) => {
        Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {
            var _a, _b;
            const property = baseCtor.prototype[name];
            if (typeof property !== 'function' || derivedCtor.hasOwnProperty(name) || (derivedCtor === null || derivedCtor === void 0 ? void 0 : derivedCtor.protectedMethods.includes(name)) || ((_b = (_a = baseCtor.prototype) === null || _a === void 0 ? void 0 : _a._protectedMethods) === null || _b === void 0 ? void 0 : _b.includes(name)))
                return;
            methods = { ...methods, [name]: property };
        });
    });
    return methods;
}
exports.applyMixins = applyMixins;
const setupCheqdExtensions = (base) => {
    return {
        ...(0, did_1.setupDidExtension)(base),
        /** setupResourcesExtension(base) */
    };
};
exports.setupCheqdExtensions = setupCheqdExtensions;
//# sourceMappingURL=_.js.map